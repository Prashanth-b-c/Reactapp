{"version":3,"file":"static/js/24.e7a67721.chunk.js","mappings":"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","sources":["crud/EmpList.js","crud/EmpForm.js","crud/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './App.css';\r\n\r\nfunction EmpList(props) {\r\n    const empDet = props.empDet || [];\r\n    return (\r\n        <div>\r\n            <p style={{ margin: '25px' }} ></p>\r\n            <table className='table  table-hover table-bordered table-striped' style={{}}>\r\n                <thead className='tabHed table-dark '>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Address</th>\r\n                        <th>City</th>\r\n                        <th>Gender</th>\r\n                        <th>Actions</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        empDet.map((emp, i) =>\r\n                            <tr key={\"keyName\" + i.toString()}>\r\n                                <td>{emp.name}</td>\r\n                                <td>{emp.address}</td>\r\n                                <td>{emp.city}</td>\r\n                                <td>{emp.gender}</td>\r\n                                <td>\r\n                                    <a class=\"edit\" title=\"Edit\" data-toggle=\"tooltip\"><i class=\"material-icons\" onClick={() => props.getEmpEdit(emp, i)}>&#xE254;</i></a>\r\n                                    <a class=\"delete\" title=\"Delete\" data-toggle=\"tooltip\" style={{ color: \"red\" }}><i class=\"material-icons\" onClick={() => props.empRemove(i)}>&#xE872;</i></a>\r\n\r\n                                </td>\r\n\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmpList;","import React, { useState, useEffect } from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst EmpForm = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [count, setCount] = useState(0);\r\n  const [count1, setCount1] = useState();\r\n  const [empList, setEmpList] = useState([]);\r\n  const [btnUpdate, btnUpdate1] = useState(true);\r\n  const [btnAdd, btnAdd1] = useState(false);\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const handleAddressChange = (event) => {\r\n    setAddress(event.target.value);\r\n  }\r\n\r\n  const handleCityChange = (event) => {\r\n    setCity(event.target.value);\r\n  }\r\n\r\n  function handleGenderChange1(event) {\r\n    if (event.target.checked) {\r\n      setGender(\"Male\");\r\n    }\r\n  }\r\n  function handleGenderChange2(event) {\r\n    if (event.target.checked) {\r\n      setGender(\"Female\");\r\n    }\r\n  }\r\n  function addEmployee() {\r\n    var updateEmpList1 = JSON.parse(JSON.stringify(empList));\r\n    // updateCount(count + 1)\r\n    updateEmpList1.push({\r\n      name: name,\r\n      address: address,\r\n      city: city,\r\n      gender: gender,\r\n      id: count\r\n    });\r\n    setEmpList(updateEmpList1);\r\n    // console.log(\"--\",updateEmpList1);\r\n    props.getEmpDetailList(updateEmpList1);\r\n    resetForm()\r\n  }\r\n\r\n  useEffect(() => {\r\n    setName(props.empEdit.name);\r\n  }, [props.empEdit.name]);\r\n  useEffect(() => {\r\n    setAddress(props.empEdit.address);\r\n  }, [props.empEdit.address]);\r\n  useEffect(() => {\r\n    setCity(props.empEdit.city);\r\n  }, [props.empEdit.city]);\r\n  useEffect(() => {\r\n    setGender(props.empEdit.gender);\r\n  }, [props.empEdit.gender]);\r\n  useEffect(() => {\r\n    setCount1(props.empEdit.id);\r\n    if (props.empEdit.id !== undefined) {\r\n      btnUpdate1(false);\r\n      btnAdd1(true);\r\n    }\r\n  }, [props.empEdit.id]);\r\n\r\n\r\n  function resetForm() {\r\n    setName(\"\");\r\n    setAddress(\"\");\r\n    setCity(\"\");\r\n    setGender(\"\");\r\n  }\r\n\r\n  function updateEmployee() {\r\n    var updateEmpList1 = JSON.parse(JSON.stringify(empList));\r\n    updateEmpList1.splice(props.empEditI, 1, {\r\n      name: name,\r\n      address: address,\r\n      city: city,\r\n      gender: gender,\r\n      id: count1\r\n    });\r\n    setEmpList(updateEmpList1);\r\n    props.getEmpDetailList(updateEmpList1);\r\n    btnAdd1(false);\r\n    btnUpdate1(true);\r\n    resetForm()\r\n    console.log(\"aa\");\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className=' formDiv'>\r\n        <p></p>\r\n        <div className='row'>\r\n          <div className='col-md-1'></div>\r\n          <div className='col-md-3'><b>Name</b></div>\r\n          <div className='col-md-5'>\r\n            <input type=\"text\"\r\n              className='form-control'\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleNameChange}\r\n            /></div>\r\n        </div>\r\n        <p></p>\r\n        <div className='row'>\r\n          <div className='col-md-1'></div>\r\n          <div className='col-md-3'><b>Address</b></div>\r\n          <div className='col-md-5'>\r\n            <textarea\r\n              className='form-control'\r\n              value={address}\r\n              name='address'\r\n              onChange={handleAddressChange}\r\n            >\r\n            </textarea></div>\r\n        </div>\r\n        <p></p>\r\n        <div className='row'>\r\n          <div className='col-md-1'></div>\r\n          <div className='col-md-3'><b>City</b></div>\r\n          <div className='col-md-5'>\r\n            <select\r\n              className='form-control'\r\n              value={city}\r\n              name='city'\r\n              onChange={handleCityChange}\r\n            >\r\n              <option value=\"\">Select City</option>\r\n              <option value=\"Chennai\">Chennai</option>\r\n              <option value=\"Mumbai\">Mumbai</option>\r\n              <option value=\"Kolkata\">Kolkata</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <p></p>\r\n        <div className='row'>\r\n          <div className='col-md-1'></div>\r\n          <div className='col-md-3'><b>Gender</b></div>\r\n          <div className='col-md-5 radioDiv'>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              value={gender}\r\n              name=\"gender\"\r\n              id='genM'\r\n              checked={gender === 'Male'}\r\n              onChange={handleGenderChange1}\r\n            />\r\n            <label className=\"form-check-label radioDiv\" htmlFor=\"genM\">Male</label>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              value={gender}\r\n              name=\"gender\"\r\n              id='genF'\r\n              checked={gender === 'Female'}\r\n              onChange={handleGenderChange2}\r\n            />\r\n            <label className=\"form-check-label radioDiv\" htmlFor=\"genF\">Female</label>\r\n          </div>\r\n        </div>\r\n        <p></p>\r\n        <div className='row'>\r\n          <div className='col-md-4'></div>\r\n          <div className='col-md-2'><button type=\"button\" className='btn1 btn2'\r\n            onClick={addEmployee}\r\n          > Add</button></div>\r\n          <div className='col-md-2'><button type=\"button\" className='btn1' onClick={updateEmployee} disabled={btnUpdate} >Update</button></div>\r\n        </div>\r\n        <input type=\"hidden\" value={count} />\r\n        <input type=\"hidden\" value={count1} />\r\n        <p></p>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\nexport default EmpForm","\nimport './App.css';\nimport React, {useState} from 'react'\nimport EmpList from './EmpList';\nimport EmpForm from './EmpForm'\n\n\nfunction App() {\n\n\n\n  const [empObjList, EmpDetails] = useState([]);\n  const [setEmpEdit, getEmpEdit2] = useState({});\n  const [setEmpEditI, getEmpEdit3] = useState({});\n  const [empDelete1, empRemove2] = useState([]);\n\n\n\n  function getEmpDet(allDet) {\n    EmpDetails(allDet);\n  }\n\n  function getEmpEdit1(editObj,i) {\n    getEmpEdit2(editObj,i);\n    getEmpEdit3(i)\n    //console.log(\"i--\",i)\n  }\n\n  function empRemove1(i) {\n    empRemove2(i);\n    empObjList.splice(i, 1);\n  }\n\n  return (\n    <div className=\"\" style={{background:' #6f42c1'}}>\n      <header className='App-header'>\n        <h2>Employee Details</h2>\n\n      </header>\n        <div className='container-lg' >\n          <div className='row'>\n            <div className='col-md-6' style={{background:'#f8f9fa'}}>\n                <EmpForm getEmpDetailList={getEmpDet} empEditI={setEmpEditI} empEdit={setEmpEdit} />\n            </div>\n            <div className='col-md-6' style={{background:'#f8f9fa'}} >\n                <EmpList empDet={empObjList} getEmpEdit={getEmpEdit1} empRemove={empRemove1} />\n            </div>\n          </div>\n        </div>  \n    </div>\n    \n  );\n}\n\nexport default App;\n"],"names":["props","empDet","style","margin","className","map","emp","i","name","address","city","gender","class","title","onClick","getEmpEdit","color","empRemove","toString","useState","setName","setAddress","setCity","setGender","count","count1","setCount1","empList","setEmpList","btnUpdate","btnUpdate1","btnAdd1","resetForm","useEffect","empEdit","id","undefined","type","value","onChange","event","target","checked","htmlFor","updateEmpList1","JSON","parse","stringify","push","getEmpDetailList","splice","empEditI","console","log","disabled","empObjList","EmpDetails","setEmpEdit","getEmpEdit2","setEmpEditI","getEmpEdit3","empRemove2","background","allDet","editObj"],"sourceRoot":""}