{"version":3,"file":"static/js/223.859f07e0.chunk.js","mappings":"4NAEaA,EAAc,I,QAAIC,G,SCuC/B,EAzCgB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAEvB,OACE,4BACE,cAAGC,MAAO,CAAEC,OAAQ,WACpB,yCACA,mBAAOC,UAAU,iDAAjB,WACE,kBAAOA,UAAU,SAAjB,UACE,2BACE,gCACA,mCACA,yCAGJ,2BAEGJ,EAAKK,KAAI,SAACC,GACT,IAAsB,IAAlBA,EAAIC,UACN,OACE,2BACE,wBAAKD,EAAIE,MACT,wBAAKF,EAAIG,SACT,yBACE,kBACEC,KAAK,WACLC,QAASL,EAAIC,UACbK,SAAU,WACRX,EAAaK,EAAIE,WARhBF,EAAIO,eC0B7B,EA3Ce,SAAC,GAA4B,IAA1Bb,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAGtB,OAFAa,QAAQC,IAAI,OAAQf,IAGlB,4BAEE,cAAGE,MAAO,CAAEC,OAAQ,WACpB,2CACA,mBAAOC,UAAU,iDAAjB,WACE,kBAAOA,UAAU,SAAjB,UACE,2BACE,gCACA,mCACA,yCAGJ,2BAEGJ,EAAKK,KAAI,SAACC,GACT,IAAsB,IAAlBA,EAAIC,UACN,OACE,2BACE,wBAAKD,EAAIE,MACT,wBAAKF,EAAIG,SACT,yBACE,kBACEC,KAAK,WACLC,QAASL,EAAIC,UACbK,SAAU,WACRX,EAAaK,EAAIE,WARhBF,EAAIO,eCyD7B,MAzEA,WACE,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOhB,EAAP,KAAaiB,EAAb,KACA,GAAwBD,EAAAA,EAAAA,UAAS,IAAjC,0BAEAE,EAAAA,EAAAA,YAAU,WACRC,IAAAA,IACO,8CACJC,MAAK,SAACC,GACL,IAAMC,EAASD,EAASE,KACxBN,EAAQK,EAAOE,MAAM,EAAG,QAEzBC,OAAM,SAACC,GACNC,MAAMD,EAAME,cAEf,KAEHV,EAAAA,EAAAA,YAAU,WACRpB,EAAY+B,WAAU,SAAAN,GAClBT,QAAQC,IAAI,6BAA8BQ,QAE/C,IAiBD,IAAMtB,EAAe,SAACO,GACpB,IAAMsB,GAAI,OAAO9B,GACjBc,QAAQC,IAAI,KAAMe,GAClB,IAAMR,EAASQ,EAAKzB,KAAI,SAACC,GACvB,OAAIA,EAAIE,KAAOA,GACN,kBAAKF,GAAZ,IAAiBC,WAAYD,EAAIC,YAE1BD,KAIXR,EAAYiC,KAAKd,EAAQK,KAK3B,OACE,iBAAKlB,UAAU,GAAGF,MAAO,CAAC8B,WAAW,YAArC,WACE,kDACA,gBAAK9B,MAAO,CAAE+B,UAAW,QAAU7B,UAAU,eAA7C,UACE,iBAAKA,UAAU,MAAf,WAEE,gBAAKA,UAAU,WAAWF,MAAO,CAAC8B,WAAW,WAA7C,UACE,SAAC,EAAD,CAAShC,KAAMA,EAAMC,aAAcA,OAGrC,gBAAKG,UAAU,WAAWF,MAAO,CAAC8B,WAAW,WAA7C,UACE,SAAC,EAAD,CAAQhC,KAAMA,EAAMC,aAAcA,YAIzC","sources":["Rxjs/subject.js","Rxjs/GetTodo.js","Rxjs/Status.js","Rxjs/App.js"],"sourcesContent":["import {BehaviorSubject} from 'rxjs'\n\nexport const prodSubject = new BehaviorSubject()","const GetTodo = ({ todo, handleChange }) => {\n\n  return (\n    <div>\n      <p style={{ margin: \"25px\" }}></p>\n      <h3>Active Todo</h3>\n      <table className=\"table table-hover table-bordered table-striped\">\n        <thead className=\"tabHed\">\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/* {todo.slice(0, 10).map((ele, i) => { */}\n          {todo.map((ele) => {\n            if (ele.completed === false) {\n              return (\n                <tr key={ele.i}>\n                  <td>{ele.id}</td>\n                  <td>{ele.title}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={ele.completed}\n                      onChange={() => {\n                        handleChange(ele.id);\n                      }}\n                    />\n                  </td>\n                </tr>\n              );\n            }\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default GetTodo;\n","import React from \"react\";\n\nconst Status = ({ todo, handleChange }) => {\n  console.log(\"todo\", todo);\n\n  return (\n    <div>\n\n      <p style={{ margin: \"25px\" }}></p>\n      <h3>Complted Todo</h3>\n      <table className=\"table table-hover table-bordered table-striped\">\n        <thead className=\"tabHed\">\n          <tr>\n            <th>Id</th>\n            <th>Title</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/* {todo.slice(0, 10).map((ele, i) => { */}\n          {todo.map((ele) => {\n            if (ele.completed !== false) {\n              return (\n                <tr key={ele.i}>\n                  <td>{ele.id}</td>\n                  <td>{ele.title}</td>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={ele.completed}\n                      onChange={() => {\n                        handleChange(ele.id);\n                      }}\n                    />\n                  </td>\n                </tr>\n              );\n            }\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Status;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { prodSubject } from \"./subject\";\nimport \"./App.css\";\nimport GetTodo from \"./GetTodo\";\nimport Status from \"./Status\";\n\nfunction App() {\n  const [todo, setTodo] = useState([]);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos\")\n      .then((response) => {\n        const result = response.data;\n        setTodo(result.slice(0, 15));\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  }, []);\n\n  useEffect(()=>{\n    prodSubject.subscribe(data=> {\n        console.log(\"data received in prod list\", data);\n    });\n}, []);\n\n\n\n  // const handleChange = (id) => {\n  //   const list = [...todo];\n  //   console.log(\"**\", list)\n  //   const result = list.map((ele) => {\n  //     if (ele.id === id) {\n  //       return { ...ele, completed: !ele.completed };\n  //     } else {\n  //       return ele;\n  //     }\n  //   });\n  //   setTodo(result);\n  // };\n\n  const handleChange = (id) => {\n    const list = [...todo];\n    console.log(\"**\", list)\n    const result = list.map((ele) => {\n      if (ele.id === id) {\n        return { ...ele, completed: !ele.completed };\n      } else {\n        return ele;\n      }\n    });\n\n    prodSubject.next(setTodo(result));\n  };\n\n\n\n  return (\n    <div className=\"\" style={{background:' #6f42c1'}}>\n      <h1>Jsonplaceholder Todo</h1>\n      <div style={{ marginTop: \"40px\" }} className=\"container-lg\">\n        <div className=\"row\">\n          {/* <h3>Active Todo</h3> */}\n          <div className=\"col-md-6\" style={{background:'#f8f9fa'}}>\n            <GetTodo todo={todo} handleChange={handleChange} />\n          </div>\n          {/* <h3>Complted Todo</h3> */}\n          <div className=\"col-md-6\" style={{background:'#f8f9fa'}}>\n            <Status todo={todo} handleChange={handleChange} />\n          </div>\n        </div>\n      </div>\n     <br></br> \n    </div>\n  );\n}\n\nexport default App;\n"],"names":["prodSubject","BehaviorSubject","todo","handleChange","style","margin","className","map","ele","completed","id","title","type","checked","onChange","i","console","log","useState","setTodo","useEffect","axios","then","response","result","data","slice","catch","error","alert","message","subscribe","list","next","background","marginTop"],"sourceRoot":""}